import type { BaseClientOptions, BaseRequestOptions } from "../../../../BaseClient";
import * as core from "../../../../core";
import type * as Square from "../../../index";
import { CustomAttributeDefinitions } from "../resources/customAttributeDefinitions/client/Client";
import { CustomAttributes } from "../resources/customAttributes/client/Client";
export declare namespace Merchants {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class Merchants {
    protected readonly _options: Merchants.Options;
    protected _customAttributeDefinitions: CustomAttributeDefinitions | undefined;
    protected _customAttributes: CustomAttributes | undefined;
    constructor(_options?: Merchants.Options);
    get customAttributeDefinitions(): CustomAttributeDefinitions;
    get customAttributes(): CustomAttributes;
    /**
     * Provides details about the merchant associated with a given access token.
     *
     * The access token used to connect your application to a Square seller is associated
     * with a single merchant. That means that `ListMerchants` returns a list
     * with a single `Merchant` object. You can specify your personal access token
     * to get your own merchant information or specify an OAuth token to get the
     * information for the merchant that granted your application access.
     *
     * If you know the merchant ID, you can also use the [RetrieveMerchant](api-endpoint:Merchants-RetrieveMerchant)
     * endpoint to retrieve the merchant information.
     *
     * @param {Square.ListMerchantsRequest} request
     * @param {Merchants.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.list({
     *         cursor: 1
     *     })
     */
    list(request?: Square.ListMerchantsRequest, requestOptions?: Merchants.RequestOptions): Promise<core.Page<Square.Merchant>>;
    /**
     * Retrieves the `Merchant` object for the given `merchant_id`.
     *
     * @param {Square.GetMerchantsRequest} request
     * @param {Merchants.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.get({
     *         merchantId: "merchant_id"
     *     })
     */
    get(request: Square.GetMerchantsRequest, requestOptions?: Merchants.RequestOptions): core.HttpResponsePromise<Square.GetMerchantResponse>;
    private __get;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
