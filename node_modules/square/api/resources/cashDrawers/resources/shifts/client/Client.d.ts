import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace Shifts {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class Shifts {
    protected readonly _options: Shifts.Options;
    constructor(_options?: Shifts.Options);
    /**
     * Provides the details for all of the cash drawer shifts for a location
     * in a date range.
     *
     * @param {Square.cashDrawers.ListShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.list({
     *         locationId: "location_id",
     *         sortOrder: "DESC",
     *         beginTime: "begin_time",
     *         endTime: "end_time",
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    list(request: Square.cashDrawers.ListShiftsRequest, requestOptions?: Shifts.RequestOptions): Promise<core.Page<Square.CashDrawerShiftSummary>>;
    /**
     * Provides the summary details for a single cash drawer shift. See
     * [ListCashDrawerShiftEvents](api-endpoint:CashDrawers-ListCashDrawerShiftEvents) for a list of cash drawer shift events.
     *
     * @param {Square.cashDrawers.GetShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.get({
     *         shiftId: "shift_id",
     *         locationId: "location_id"
     *     })
     */
    get(request: Square.cashDrawers.GetShiftsRequest, requestOptions?: Shifts.RequestOptions): core.HttpResponsePromise<Square.GetCashDrawerShiftResponse>;
    private __get;
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     *
     * @param {Square.cashDrawers.ListEventsShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.listEvents({
     *         shiftId: "shift_id",
     *         locationId: "location_id",
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    listEvents(request: Square.cashDrawers.ListEventsShiftsRequest, requestOptions?: Shifts.RequestOptions): Promise<core.Page<Square.CashDrawerShiftEvent>>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
