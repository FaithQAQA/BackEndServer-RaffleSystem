import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace WorkweekConfigs {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class WorkweekConfigs {
    protected readonly _options: WorkweekConfigs.Options;
    constructor(_options?: WorkweekConfigs.Options);
    /**
     * Returns a list of `WorkweekConfig` instances for a business.
     *
     * @param {Square.labor.ListWorkweekConfigsRequest} request
     * @param {WorkweekConfigs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.workweekConfigs.list({
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    list(request?: Square.labor.ListWorkweekConfigsRequest, requestOptions?: WorkweekConfigs.RequestOptions): Promise<core.Page<Square.WorkweekConfig>>;
    /**
     * Updates a `WorkweekConfig`.
     *
     * @param {Square.labor.UpdateWorkweekConfigRequest} request
     * @param {WorkweekConfigs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.workweekConfigs.get({
     *         id: "id",
     *         workweekConfig: {
     *             startOfWeek: "MON",
     *             startOfDayLocalTime: "10:00",
     *             version: 10
     *         }
     *     })
     */
    get(request: Square.labor.UpdateWorkweekConfigRequest, requestOptions?: WorkweekConfigs.RequestOptions): core.HttpResponsePromise<Square.UpdateWorkweekConfigResponse>;
    private __get;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
