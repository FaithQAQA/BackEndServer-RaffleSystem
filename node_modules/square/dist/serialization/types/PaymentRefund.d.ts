import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { DestinationDetails } from "./DestinationDetails";
import { Money } from "./Money";
import { ProcessingFee } from "./ProcessingFee";
export declare const PaymentRefund: core.serialization.ObjectSchema<serializers.PaymentRefund.Raw, Square.PaymentRefund>;
export declare namespace PaymentRefund {
    interface Raw {
        id: string;
        status?: (string | null | undefined) | null;
        location_id?: (string | null | undefined) | null;
        unlinked?: boolean | null;
        destination_type?: (string | null | undefined) | null;
        destination_details?: DestinationDetails.Raw | null;
        amount_money: Money.Raw;
        app_fee_money?: Money.Raw | null;
        processing_fee?: (ProcessingFee.Raw[] | null | undefined) | null;
        payment_id?: (string | null | undefined) | null;
        order_id?: (string | null | undefined) | null;
        reason?: (string | null | undefined) | null;
        created_at?: string | null;
        updated_at?: string | null;
        team_member_id?: string | null;
        terminal_refund_id?: string | null;
    }
}
