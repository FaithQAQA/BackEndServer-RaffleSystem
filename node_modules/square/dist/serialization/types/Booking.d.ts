import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Address } from "./Address";
import { AppointmentSegment } from "./AppointmentSegment";
import { BookingBookingSource } from "./BookingBookingSource";
import { BookingCreatorDetails } from "./BookingCreatorDetails";
import { BookingStatus } from "./BookingStatus";
import { BusinessAppointmentSettingsBookingLocationType } from "./BusinessAppointmentSettingsBookingLocationType";
export declare const Booking: core.serialization.ObjectSchema<serializers.Booking.Raw, Square.Booking>;
export declare namespace Booking {
    interface Raw {
        id?: string | null;
        version?: number | null;
        status?: BookingStatus.Raw | null;
        created_at?: string | null;
        updated_at?: string | null;
        start_at?: (string | null | undefined) | null;
        location_id?: (string | null | undefined) | null;
        customer_id?: (string | null | undefined) | null;
        customer_note?: (string | null | undefined) | null;
        seller_note?: (string | null | undefined) | null;
        appointment_segments?: (AppointmentSegment.Raw[] | null | undefined) | null;
        transition_time_minutes?: number | null;
        all_day?: boolean | null;
        location_type?: BusinessAppointmentSettingsBookingLocationType.Raw | null;
        creator_details?: BookingCreatorDetails.Raw | null;
        source?: BookingBookingSource.Raw | null;
        address?: Address.Raw | null;
    }
}
