import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace LocationProfiles {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class LocationProfiles {
    protected readonly _options: LocationProfiles.Options;
    constructor(_options?: LocationProfiles.Options);
    /**
     * Lists location booking profiles of a seller.
     *
     * @param {Square.bookings.ListLocationProfilesRequest} request
     * @param {LocationProfiles.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.locationProfiles.list({
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    list(request?: Square.bookings.ListLocationProfilesRequest, requestOptions?: LocationProfiles.RequestOptions): Promise<core.Page<Square.LocationBookingProfile>>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
