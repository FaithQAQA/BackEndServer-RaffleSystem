import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace CustomAttributeDefinitions {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class CustomAttributeDefinitions {
    protected readonly _options: CustomAttributeDefinitions.Options;
    constructor(_options?: CustomAttributeDefinitions.Options);
    /**
     * Get all bookings custom attribute definitions.
     *
     * To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope.
     * To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
     *
     * @param {Square.bookings.ListCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.customAttributeDefinitions.list({
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    list(request?: Square.bookings.ListCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<core.Page<Square.CustomAttributeDefinition>>;
    /**
     * Creates a bookings custom attribute definition.
     *
     * To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope.
     * To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.
     *
     * For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus*
     * or *Appointments Premium*.
     *
     * @param {Square.bookings.CreateBookingCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.customAttributeDefinitions.create({
     *         customAttributeDefinition: {}
     *     })
     */
    create(request: Square.bookings.CreateBookingCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): core.HttpResponsePromise<Square.CreateBookingCustomAttributeDefinitionResponse>;
    private __create;
    /**
     * Retrieves a bookings custom attribute definition.
     *
     * To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope.
     * To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
     *
     * @param {Square.bookings.GetCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.customAttributeDefinitions.get({
     *         key: "key",
     *         version: 1
     *     })
     */
    get(request: Square.bookings.GetCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): core.HttpResponsePromise<Square.RetrieveBookingCustomAttributeDefinitionResponse>;
    private __get;
    /**
     * Updates a bookings custom attribute definition.
     *
     * To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope.
     * To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.
     *
     * For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus*
     * or *Appointments Premium*.
     *
     * @param {Square.bookings.UpdateBookingCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.customAttributeDefinitions.update({
     *         key: "key",
     *         customAttributeDefinition: {}
     *     })
     */
    update(request: Square.bookings.UpdateBookingCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): core.HttpResponsePromise<Square.UpdateBookingCustomAttributeDefinitionResponse>;
    private __update;
    /**
     * Deletes a bookings custom attribute definition.
     *
     * To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope.
     * To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.
     *
     * For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus*
     * or *Appointments Premium*.
     *
     * @param {Square.bookings.DeleteCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bookings.customAttributeDefinitions.delete({
     *         key: "key"
     *     })
     */
    delete(request: Square.bookings.DeleteCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): core.HttpResponsePromise<Square.DeleteBookingCustomAttributeDefinitionResponse>;
    private __delete;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
