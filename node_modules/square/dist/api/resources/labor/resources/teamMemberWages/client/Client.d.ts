import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace TeamMemberWages {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class TeamMemberWages {
    protected readonly _options: TeamMemberWages.Options;
    constructor(_options?: TeamMemberWages.Options);
    /**
     * Returns a paginated list of `TeamMemberWage` instances for a business.
     *
     * @param {Square.labor.ListTeamMemberWagesRequest} request
     * @param {TeamMemberWages.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.teamMemberWages.list({
     *         teamMemberId: "team_member_id",
     *         limit: 1,
     *         cursor: "cursor"
     *     })
     */
    list(request?: Square.labor.ListTeamMemberWagesRequest, requestOptions?: TeamMemberWages.RequestOptions): Promise<core.Page<Square.TeamMemberWage>>;
    /**
     * Returns a single `TeamMemberWage` specified by `id`.
     *
     * @param {Square.labor.GetTeamMemberWagesRequest} request
     * @param {TeamMemberWages.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.teamMemberWages.get({
     *         id: "id"
     *     })
     */
    get(request: Square.labor.GetTeamMemberWagesRequest, requestOptions?: TeamMemberWages.RequestOptions): core.HttpResponsePromise<Square.GetTeamMemberWageResponse>;
    private __get;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
