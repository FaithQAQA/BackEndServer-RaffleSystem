import type { BaseClientOptions, BaseRequestOptions } from "../../../../BaseClient";
import * as core from "../../../../core";
import type * as Square from "../../../index";
export declare namespace BankAccounts {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class BankAccounts {
    protected readonly _options: BankAccounts.Options;
    constructor(_options?: BankAccounts.Options);
    /**
     * Returns a list of [BankAccount](entity:BankAccount) objects linked to a Square account.
     *
     * @param {Square.ListBankAccountsRequest} request
     * @param {BankAccounts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bankAccounts.list({
     *         cursor: "cursor",
     *         limit: 1,
     *         locationId: "location_id"
     *     })
     */
    list(request?: Square.ListBankAccountsRequest, requestOptions?: BankAccounts.RequestOptions): Promise<core.Page<Square.BankAccount>>;
    /**
     * Returns details of a [BankAccount](entity:BankAccount) identified by V1 bank account ID.
     *
     * @param {Square.GetByV1IdBankAccountsRequest} request
     * @param {BankAccounts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bankAccounts.getByV1Id({
     *         v1BankAccountId: "v1_bank_account_id"
     *     })
     */
    getByV1Id(request: Square.GetByV1IdBankAccountsRequest, requestOptions?: BankAccounts.RequestOptions): core.HttpResponsePromise<Square.GetBankAccountByV1IdResponse>;
    private __getByV1Id;
    /**
     * Returns details of a [BankAccount](entity:BankAccount)
     * linked to a Square account.
     *
     * @param {Square.GetBankAccountsRequest} request
     * @param {BankAccounts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.bankAccounts.get({
     *         bankAccountId: "bank_account_id"
     *     })
     */
    get(request: Square.GetBankAccountsRequest, requestOptions?: BankAccounts.RequestOptions): core.HttpResponsePromise<Square.GetBankAccountResponse>;
    private __get;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
