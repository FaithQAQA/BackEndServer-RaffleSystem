import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace EventTypes {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class EventTypes {
    protected readonly _options: EventTypes.Options;
    constructor(_options?: EventTypes.Options);
    /**
     * Lists all webhook event types that can be subscribed to.
     *
     * @param {Square.webhooks.ListEventTypesRequest} request
     * @param {EventTypes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.webhooks.eventTypes.list({
     *         apiVersion: "api_version"
     *     })
     */
    list(request?: Square.webhooks.ListEventTypesRequest, requestOptions?: EventTypes.RequestOptions): core.HttpResponsePromise<Square.ListWebhookEventTypesResponse>;
    private __list;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
