import type { BaseClientOptions, BaseRequestOptions } from "../../../../../../BaseClient";
import * as core from "../../../../../../core";
import type * as Square from "../../../../../index";
export declare namespace Refunds {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class Refunds {
    protected readonly _options: Refunds.Options;
    constructor(_options?: Refunds.Options);
    /**
     * Creates a request to refund an Interac payment completed on a Square Terminal. Refunds for Interac payments on a Square Terminal are supported only for Interac debit cards in Canada. Other refunds for Terminal payments should use the Refunds API. For more information, see [Refunds API](api:Refunds).
     *
     * @param {Square.terminal.CreateTerminalRefundRequest} request
     * @param {Refunds.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.terminal.refunds.create({
     *         idempotencyKey: "402a640b-b26f-401f-b406-46f839590c04",
     *         refund: {
     *             paymentId: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
     *             amountMoney: {
     *                 amount: BigInt("111"),
     *                 currency: "CAD"
     *             },
     *             reason: "Returning items",
     *             deviceId: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291"
     *         }
     *     })
     */
    create(request: Square.terminal.CreateTerminalRefundRequest, requestOptions?: Refunds.RequestOptions): core.HttpResponsePromise<Square.CreateTerminalRefundResponse>;
    private __create;
    /**
     * Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request. Terminal refund requests are available for 30 days.
     *
     * @param {Square.terminal.SearchTerminalRefundsRequest} request
     * @param {Refunds.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.terminal.refunds.search({
     *         query: {
     *             filter: {
     *                 status: "COMPLETED"
     *             }
     *         },
     *         limit: 1
     *     })
     */
    search(request?: Square.terminal.SearchTerminalRefundsRequest, requestOptions?: Refunds.RequestOptions): core.HttpResponsePromise<Square.SearchTerminalRefundsResponse>;
    private __search;
    /**
     * Retrieves an Interac Terminal refund object by ID. Terminal refund objects are available for 30 days.
     *
     * @param {Square.terminal.GetRefundsRequest} request
     * @param {Refunds.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.terminal.refunds.get({
     *         terminalRefundId: "terminal_refund_id"
     *     })
     */
    get(request: Square.terminal.GetRefundsRequest, requestOptions?: Refunds.RequestOptions): core.HttpResponsePromise<Square.GetTerminalRefundResponse>;
    private __get;
    /**
     * Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.
     *
     * @param {Square.terminal.CancelRefundsRequest} request
     * @param {Refunds.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.terminal.refunds.cancel({
     *         terminalRefundId: "terminal_refund_id"
     *     })
     */
    cancel(request: Square.terminal.CancelRefundsRequest, requestOptions?: Refunds.RequestOptions): core.HttpResponsePromise<Square.CancelTerminalRefundResponse>;
    private __cancel;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
