import type { BaseClientOptions, BaseRequestOptions } from "../../../../BaseClient";
import * as core from "../../../../core";
import type * as Square from "../../../index";
export declare namespace Mobile {
    interface Options extends BaseClientOptions {
    }
    interface RequestOptions extends BaseRequestOptions {
    }
}
export declare class Mobile {
    protected readonly _options: Mobile.Options;
    constructor(_options?: Mobile.Options);
    /**
     * __Note:__ This endpoint is used by the deprecated Reader SDK.
     * Developers should update their integration to use the [Mobile Payments SDK](https://developer.squareup.com/docs/mobile-payments-sdk), which includes its own authorization methods.
     *
     * Generates code to authorize a mobile application to connect to a Square card reader.
     *
     * Authorization codes are one-time-use codes and expire 60 minutes after being issued.
     *
     * The `Authorization` header you provide to this endpoint must have the following format:
     *
     * ```
     * Authorization: Bearer ACCESS_TOKEN
     * ```
     *
     * Replace `ACCESS_TOKEN` with a
     * [valid production authorization credential](https://developer.squareup.com/docs/build-basics/access-tokens).
     *
     * @param {Square.CreateMobileAuthorizationCodeRequest} request
     * @param {Mobile.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.mobile.authorizationCode({
     *         locationId: "YOUR_LOCATION_ID"
     *     })
     */
    authorizationCode(request?: Square.CreateMobileAuthorizationCodeRequest, requestOptions?: Mobile.RequestOptions): core.HttpResponsePromise<Square.CreateMobileAuthorizationCodeResponse>;
    private __authorizationCode;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
