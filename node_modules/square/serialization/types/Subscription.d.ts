import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Money } from "./Money";
import { Phase } from "./Phase";
import { SubscriptionAction } from "./SubscriptionAction";
import { SubscriptionSource } from "./SubscriptionSource";
import { SubscriptionStatus } from "./SubscriptionStatus";
export declare const Subscription: core.serialization.ObjectSchema<serializers.Subscription.Raw, Square.Subscription>;
export declare namespace Subscription {
    interface Raw {
        id?: string | null;
        location_id?: string | null;
        plan_variation_id?: string | null;
        customer_id?: string | null;
        start_date?: string | null;
        canceled_date?: (string | null | undefined) | null;
        charged_through_date?: string | null;
        status?: SubscriptionStatus.Raw | null;
        tax_percentage?: (string | null | undefined) | null;
        invoice_ids?: string[] | null;
        price_override_money?: Money.Raw | null;
        version?: (bigint | number) | null;
        created_at?: string | null;
        card_id?: (string | null | undefined) | null;
        timezone?: string | null;
        source?: SubscriptionSource.Raw | null;
        actions?: (SubscriptionAction.Raw[] | null | undefined) | null;
        monthly_billing_anchor_date?: number | null;
        phases?: Phase.Raw[] | null;
        completed_date?: (string | null | undefined) | null;
    }
}
